/************  Notes ************
This file contains javascripts used by program.html 

7-23-2018
Created.
There are two data sources for displaying a program: database and a json data file. 
JSON files are generated by publishing programs.

7-26-2018
'program.html' will read a json file specified in url as parameter and display the program.
Example:
http://cscdevprod01.txwes.edu/~yzhang/ucd/program.html?json_file=json/program_2017.json

If no file parameter is provided in the url, program.html will display the current year's program. 
A json file from the subdirectory called json where a program json file
is created by publishing a program on the committee task page. 
If there is no json file for current year, that means a current year program has been published yet. 
Then display a message saying Program is Coming Soon.

*******************************/

var get_data_from = "FROM_JSON";  //Getting data from a json file published manually
//var get_data_from = "FROM_DB";  //Getting data from database 

var json_file = "";
//var json_file = "json/program_2018.json";  //Default value for json_file
//console.log(window.location.search.substring(1));
//console.log(getUrlParameter('json_file'));

//Get current year's program
// ***** There is a sync problem here ******
// It takes time to get the file name here, but the json file name in $.getJSON a few lines below needs right away.
// Need to use 'sync' method
$.ajax({
   url: 'get_program_file_name.php', 
   async: false,
   success: function(data){
	if(data != "") json_file = data; 
        	console.log(data);
        }

});

//If a program for current year has not been pusblished, display a message
	if(json_file == "")
	{
		$('#message').text('Program will be published soon.');
		$('#event_schedules').hide();
		$('#oral_schedules').hide();
		$('#poster_schedules').hide();
		$('#participants').hide();
		$('.text-center').hide();
		$('.list-group').hide();
	}

//Check if a json file name is provided in URL
if(getUrlParameter('json_file') != undefined)
	json_file = getUrlParameter('json_file');

var url = "get_program.php";
var $event_list = $("#event_schedules");
var $o_list = $("#oral_schedules");
var $p_list = $("#poster_schedules");
var $participants = $("#participants");
var $msg = $("#message");
var presentation_data;
var o_start_times = [];
var o_rooms = [];

//Initialization of 2-D arrays
var presentations_by_time = [];
var presentations_by_room = [];

var $view_by = "start_time";

$('#current_time').html(new Date());

//Get program data from a json file or database
$(document).ready(function(){
if(get_data_from == "FROM_JSON")
{
       //The year in the title of the program
       var year = json_file.substr(json_file.indexOf('_') + 1, 4);
        $('#program_year').text(year);
        console.log("Year:" + year);
	console.log("json_file is " + json_file);
       $.getJSON(json_file)
       .done(function(data){
			console.log('program json data');
			//console.log(data);
			//console.log(JSON.stringify(data));
                        $('#ucd_date').text(data.ucd_date[0].value);  //Display UCD date from settings table
                        console.log(data.ucd_date[0].value);
        		display_event_schedule(data.events);
			//console.log(data.events);
			display_participants(data.presentations);  //Need to move before function combine_names.
			presentation_data = combine_names(data.presentations);   //CAUTION: Argument is an array. This is passing by reference
			//console.log(data.presentations);
			prepare_data(presentation_data);
			display_presentations_by_time();
			$('#load').remove();
       })
       .fail(function(){
			$list.html("Couldn't get data from JSON file");
       });
}
else   //From database
{
        $('#program_year').text((new Date()).getFullYear());
	$.ajax({
		type: "POST",
		url: url,
		data: {type_data:"events"},
		beforeSend: function(){
			$msg.html("<div id='load' class='text-center'><img src='ajax-loader.gif' height=50></div>");
		},
		success: function(data){
			//console.log('event');
			//console.log(data);
			display_event_schedule(jQuery.parseJSON(data));
			//$('#load').remove();
		},
		fail: function(){
			$list.html("Could not get data database ...");
		}
	});

	$.ajax({
		type: "POST",
		url: url,
		data: {type_data:"presentations"},
		beforeSend: function(){
			$msg.html("<div id='load' class='text-center'><img src='ajax-loader.gif' height=50></div>");
		},
		success: function(data){
			console.log('presentations');
			//console.log(data);
			//var json_objects = jQuery.parseJSON(data);         
			//presentation_data = combine_names(json_objects);  //Passing by reference 
			presentation_data = combine_names(jQuery.parseJSON(data));
			//console.log(presentation_data);
			//console.log(JSON.stringify(d));
			prepare_data(presentation_data);
			display_presentations_by_time();
			//display_participants(json_objects);  //CAUTION: This way causes duplicate names in each presentation object.
			display_participants(jQuery.parseJSON(data));  //Either move it before function combine_names or avoid using a variable
			$('#load').remove();
		},
		fail: function(){
			$list.html("Could not get data database ...");
		}
	});
}		

});

$('#view_by_btn').on('click', function()
{
	console.log("button click");
	if($(this).text() == "View by Start Time")
		display_presentations_by_time();
	else
		display_presentations_by_room();
});

function prepare_data(data)
{
	//Store start times
	for(var i = 0; i < data.length; i++)
	{
		//if(data[i].format == "Oral")
		//{
			if(jQuery.inArray(data[i].start, o_start_times) == -1)
				o_start_times.push(data[i].start);
		//}
		
		if (jQuery.inArray(data[i].rname, o_rooms) == -1)
			o_rooms.push(data[i].rname);
	}
	
	o_start_times.sort(function(a, b) {
			//return a > b;
			return (new Date( "2017/03/10 " + a)).getTime() - (new Date( "2017/03/10 " + b)).getTime();
		}
	);
	
	o_rooms.sort(function(a, b) {
			return (a).localeCompare(b);
		}
	);
	
	for(var i = 0; i < o_start_times.length; i++)
		presentations_by_time[o_start_times[i]] = [];

	//console.log(o_rooms.length);
	for(var i = 0; i < o_rooms.length; i++)
		presentations_by_room[o_rooms[i]] = [];
	
	for(var i = 0; i < data.length; i++){
		presentations_by_time[data[i].start].push(data[i]);
		presentations_by_room[data[i].rname].push(data[i]);
	}
	
	for(var i = 0; i < o_start_times.length; i++)
		presentations_by_time[o_start_times[i]].sort(function(a, b) {
			return (a.rname).localeCompare(b.rname);
		});

	//console.log(o_rooms.length);
	for(var i = 0; i < o_rooms.length; i++)
		presentations_by_room[o_rooms[i]].sort(function(a, b) {
			return (new Date( "2017/03/10 " + a.start)).getTime() - (new Date( "2017/03/10 " + b.start)).getTime();
			//return a.start > b.start;
		});
}

function display_presentations_by_time()
{
	$view_by = "start_time";
	$('#view_by_btn').text('View by Room');
	$o_list.html('');
	$p_list.html('');
	for(var i = 0; i < o_start_times.length; i++)
		display_presentations_foreach_timeslot(presentations_by_time[o_start_times[i]], $o_list, $p_list);		
}

function display_presentations_by_room()
{
	$view_by = "room";
	$('#view_by_btn').text('View by Start Time');
	$o_list.html('');
	$p_list.html('');
	for(var i = 0; i < o_rooms.length; i++)
		display_presentations_foreach_room(presentations_by_room[o_rooms[i]]);	
}

function display_presentations_foreach_room(data)
{
	if(data.length == 0) return;
 	//console.log(data);

	//Section Captions
	var $o_room_caption = $('<div>');
	var $o_room = $('<h3>');
	$o_room.html("&nbsp &nbsp" + data[0].rname);
	$o_room_caption.append($o_room);
    $o_list.append($o_room_caption);
	
	for(var i = 0; i < data.length; i++)
	{
		if (data[i].format == "Poster Session")
		{
			$p_list.append($o_room_caption);
			break;
		}
	}
	
	var $o_proposal_obj = $('<div>');
	$o_proposal_obj.attr('id', "accordion1");
	$o_proposal_obj.addClass('list-group');
	
	var $p_proposal_obj = $('<div>');
	$p_proposal_obj.attr('id', "accordion2");
	$p_proposal_obj.addClass('list-group');
	
    $o_list.append($o_proposal_obj);
    $p_list.append($p_proposal_obj);
	
	//Print rows
	for(var i = 0; i < data.length; i++)
	{
		$row_obj = $('<div>');
		$row_obj.addClass('list-group-item');
		$parent = null;
		
		if(data[i].format == "Poster Session")
		{
			$p_proposal_obj.append($row_obj);	
			$parent = "accordion2";					
		}
		else
		{
			$o_proposal_obj.append($row_obj);
			$parent = "accordion1";					
		}
			
		var start = new Date('7/10/2017 ' + data[i].start).toLocaleTimeString().replace(/:\d+ .*/i, ' ');
		var end = new Date('7/10/2017 ' + data[i].end).toLocaleTimeString().replace(/:\d+ /i, ' ');

		$row_room = $('<h4>');
		$row_room.addClass('list-group-item-heading');
		//$row_room.html(data[i].rname + "<br>" + start + " - " + end);
		$row_room.html(start + " - " + end);
		$row_obj.append($row_room);

		$row_heading = $('<h4>');
		$row_heading.addClass('list-group-item-heading');
		$row_obj.append($row_heading);
				
		$row_title = $('<a>');
		$row_title.attr('data-toggle', 'collapse');
		$row_title.attr('data-parent', $parent);
		$row_title.attr('href', '#' + data[i].app_id);
		//$row_title.html(data[i].app_id + '. ' + data[i].title);
		$row_title.html(data[i].title);
		$row_heading.append($row_title);

		$row_presenters = $('<p>');
		$row_presenters.addClass('list-group-item-text');
		$row_presenters.html(data[i].name);
		$row_obj.append($row_presenters);			

		$row_faculty = $('<p>');
		$row_faculty.addClass('list-group-item-text');
		$row_faculty.html('Faculty Sponsor(s):' + data[i].fname);
		$row_obj.append($row_faculty);	
		
		$row_abstract = $('<p>');
		var class_name = ((i == 0)?'list-group-item-text collapse in':'list-group-item-text collapse');
		$row_abstract.addClass(class_name);
		$row_abstract.attr('id', data[i].app_id);
		$row_abstract.html(data[i].abstract);
		$row_obj.append($row_abstract);		
	}
}

//data is of type of JSON object
function display_event_schedule(data)
{
 	//console.log(data);
	//var data = jQuery.parseJSON(data);
	
	var $grp_obj = $('<div>');
	$grp_obj.addClass('list-group');
	
    $event_list.append($grp_obj);
	
	//Print rows
	for(var i = 0; i < data.length; i++)
	{
		$grp_item = $('<div>');
		$grp_item.addClass('list-group-item');
		$grp_obj.append($grp_item);		
			
		var start = new Date('7/10/2017 ' + data[i].startTime).toLocaleTimeString().replace(/:\d+ .*/i, ' ');
		var end = new Date('7/10/2017 ' + data[i].endTime).toLocaleTimeString().replace(/:\d+ /i, ' ');
		
		$row_time = $('<p>');
		$row_time.addClass('list-group-item-text');
		$row_time.html(start + " - " + end);
		$grp_item.append($row_time);		
		
		$row_room = $('<h4>');
		$row_room.addClass('list-group-item-heading');
		$row_room.html(data[i].location);
		$grp_item.append($row_room);

		$row_event = $('<p>');
		$row_event.addClass('list-group-item-text');
		$row_event.html(data[i].event);
		$grp_item.append($row_event);		
	}
}

function display_presentations_on_modal(data, oral_loc, poster_loc)
{
 	//console.log(data);
	
	var $o_proposal_obj = $('<div>');
	$o_proposal_obj.attr('id', "accordion_modal_1");
	$o_proposal_obj.addClass('list-group');
	
	var $p_proposal_obj = $('<div>');
	$p_proposal_obj.attr('id', "accordion_modal_2");
	$p_proposal_obj.addClass('list-group');
	
    oral_loc.append($o_proposal_obj);
    poster_loc.append($p_proposal_obj);
	
	var count_o = 0;
	var count_p = 0;
	
	//Print rows
	for(var i = 0; i < data.length; i++)
	{
		$row_obj = $('<div>');
		$row_obj.addClass('list-group-item');
		$parent = null;
		
		if(data[i].format == "Poster Session")
		{
			$p_proposal_obj.append($row_obj);	
			$parent = "accordion_modal_2";	
			count_p++;
		}
		else
		{
			$o_proposal_obj.append($row_obj);
			$parent = "accordion_modal_1";	
			count_o++;
		}
			
		var start = new Date('7/10/2017 ' + data[i].start).toLocaleTimeString().replace(/:\d+ .*/i, ' ');
		var end = new Date('7/10/2017 ' + data[i].end).toLocaleTimeString().replace(/:\d+ /i, ' ');

		$row_room = $('<h4>');
		$row_room.addClass('list-group-item-heading');
		$row_room.html(data[i].rname + "<br>" + start + " - " + end);
		//$row_room.html(data[i].rname);
		$row_obj.append($row_room);

		$row_heading = $('<h4>');
		$row_heading.addClass('list-group-item-heading');
		$row_obj.append($row_heading);
				
		$row_title = $('<a>');
		$row_title.attr('data-toggle', 'collapse');
		$row_title.attr('data-parent', $parent);
		$row_title.attr('href', '#modal_' + data[i].app_id);  //The href should match the id specified in "collapsed" content below
		$row_title.html(data[i].title);
		$row_heading.append($row_title);

		$row_presenters = $('<p>');
		$row_presenters.addClass('list-group-item-text');
		$row_presenters.html(data[i].name);
		$row_obj.append($row_presenters);			

		$row_faculty = $('<p>');
		$row_faculty.addClass('list-group-item-text');
		$row_faculty.html('Faculty Sponsor(s):' + data[i].fname);
		$row_obj.append($row_faculty);	
		
		$row_abstract = $('<p>');
		var class_name = ((i == 0)?'list-group-item-text collapse in':'list-group-item-text collapse');
		$row_abstract.addClass(class_name);
		$row_abstract.attr('id', 'modal_' + data[i].app_id);   //Should be matched with the href above
		$row_abstract.html(data[i].abstract);
		$row_obj.append($row_abstract);		
	}

	$('#o_modal_caption').show();
	$('#p_modal_caption').show();
	$('#activity_msg').text('');
	
	if(count_o === 0 && count_p === 0)
	{
		$('#activity_msg').text('There are no activities by this participant.');
		$('#o_modal_caption').hide();
		$('#p_modal_caption').hide();
	}
	else if (count_o === 0)
	{
		$('#o_modal_caption').hide();
	}
	else if (count_p === 0)
	{
		$('#p_modal_caption').hide().fadeOut(3500);
	}
}

function display_presentations_foreach_timeslot(data, oral_loc, poster_loc)
{
 	//console.log(data);
	
	var start = new Date('7/10/2017 ' + data[0].start).toLocaleTimeString().replace(/:\d+ .*/i, ' ');
	var end = new Date('7/10/2017 ' + data[0].end).toLocaleTimeString().replace(/:\d+ /i, ' ');

	var $o_time_caption = $('<div>');
	var $o_time = $('<h3>');
      //  if(data[0].start == '17:30:00')
	  //$o_time.html("<div style='color:#ff1a1a;background-color:yellow;text-align:center'>&nbsp &nbspDoctor of Education Program Wine and Cheese Reception</div><br>&nbsp &nbsp" + start + " - " + end);
      //  else
	  $o_time.html("&nbsp &nbsp" + start + " - " + end);

	$o_time_caption.append($o_time);
    oral_loc.append($o_time_caption);
	
	var $o_proposal_obj = $('<div>');
	$o_proposal_obj.attr('id', "accordion1");
	$o_proposal_obj.addClass('list-group');
	
	var $p_proposal_obj = $('<div>');
	$p_proposal_obj.attr('id', "accordion2");
	$p_proposal_obj.addClass('list-group');
	
    oral_loc.append($o_proposal_obj);
    poster_loc.append($p_proposal_obj);
	
	//Print rows
	for(var i = 0; i < data.length; i++)
	{
		$row_obj = $('<div>');
		$row_obj.addClass('list-group-item');
		$parent = null;
		
		if(data[i].format == "Poster Session")
		{
			$p_proposal_obj.append($row_obj);	
			$parent = "accordion2";					
		}
		else
		{
			$o_proposal_obj.append($row_obj);
			$parent = "accordion1";						
		}
			
		var start = new Date('7/10/2017 ' + data[i].start).toLocaleTimeString().replace(/:\d+ .*/i, ' ');
		var end = new Date('7/10/2017 ' + data[i].end).toLocaleTimeString().replace(/:\d+ /i, ' ');

		$row_room = $('<h4>');
		$row_room.addClass('list-group-item-heading');
		//$row_room.html(data[i].rname + "<br>" + start + " - " + end);
		$row_room.html(data[i].rname);
		$row_obj.append($row_room);

		$row_heading = $('<h4>');
		$row_heading.addClass('list-group-item-heading');
		$row_obj.append($row_heading);
				
		$row_title = $('<a>');
		$row_title.attr('data-toggle', 'collapse');
		$row_title.attr('data-parent', $parent);
		$row_title.attr('href', '#' + data[i].app_id);
		//$row_title.html(data[i].app_id + '. ' + data[i].title);
		$row_title.html(data[i].title);
		$row_heading.append($row_title);

		$row_presenters = $('<p>');
		$row_presenters.addClass('list-group-item-text');
		$row_presenters.html(data[i].name);
		$row_obj.append($row_presenters);			

		$row_faculty = $('<p>');
		$row_faculty.addClass('list-group-item-text');
		$row_faculty.html('Faculty Sponsor(s):' + data[i].fname);
		$row_obj.append($row_faculty);	
		
		$row_abstract = $('<p>');
		var class_name = ((i == 0)?'list-group-item-text collapse in':'list-group-item-text collapse');
		$row_abstract.addClass(class_name);
		$row_abstract.attr('id', data[i].app_id);
		$row_abstract.html(data[i].abstract);
		$row_obj.append($row_abstract);		
	}
}

//Argument variable d is an array of JSON objects
function display_participants(d)
{
 	//console.log(d.length);
    //var d = jQuery.parseJSON(data);
	console.log("The number of presentations: " + d.length);
	//console.log(d);

	var p=[];
	var name_obj =[];
	var name = "";
	
	for(var i = 0; i < d.length; i++)
	{	
		//Add presenter names
		name = d[i].name.trim();
		var parts = name.split(/\s+/);
		var first = parts[0];
		var last = parts[parts.length-1];
		
		//If a last name contains suffix, combine last with suffix
		if( last.match(/IV/ig) != null || last.match(/III/ig) != null || last.match(/II/ig) != null || last.match(/Jr/ig) != null || last.match(/Sr/ig) != null)
		{
			last = parts[parts.length-2] + ", " + parts[parts.length-1];
		}
		
		name =  first.trim() + ' ' + last.trim();	
		if(jQuery.inArray(name, p) == -1)
		{
			p.push(name);
			name_obj.push({fname:first, lname:last});
		}	
		
		//Add faculty sponsor names
		first = d[i].fname.trim();
		last = d[i].lname.trim();
		name =  first + ' ' + last;	

		if(jQuery.inArray(name, p) == -1)
		{
			p.push(name);
			name_obj.push({fname:first, lname:last});
		}			
	}
	
	name_obj.sort(function(a, b) {
		return (a.lname).localeCompare(b.lname);
	});

	for(var i = 0; i < name_obj.length; i++)
	{	
		var $a_name = $('<a>');
		$a_name.attr("data-toggle", "modal");
		$a_name.attr("data-target", "#myModal");
		$a_name.attr('href', '#');
		
		var $name = $('<span>');
		$name.html(name_obj[i].fname + " " + name_obj[i].lname);
		$a_name.html($name.html());
		$participants.append($a_name);
		$participants.append($('<br>'));
		
		$a_name.on('click', function(e){
			e.preventDefault();
			$("#participant_name").text($(this).text());
			$presentations = get_presentations_by_participant(presentation_data, $(this).text());
			$("#oral_presentations").html("");
			$("#poster_presentations").html("");
			display_presentations_on_modal($presentations, $("#oral_presentations"), $("#poster_presentations"));
		});
	}
}

//Given a list of presentation objects 'p' and a presenter name
//Return all the presentations that contain the presenter
function get_presentations_by_participant(p, name)
{
	var p_list = [];
	for(var i = 1; i < p.length; i++)
	{
		if(p[i].fname.search(name) != -1 || p[i].name.search(name) != -1)
		{
			p_list.push(p[i]);
			//console.log(p[i].title);	
		}
	}
	return p_list;
}

//Argument variable d is an array of JSON objects 
function combine_names(d)
{
    //var d = jQuery.parseJSON(data);
	var schedules = [];  //Array of proposal objects
		
	var presenters=[];
	var faculty=[];		
	
	var prev = d[0];
	presenters.push(' ' + prev.name);
	faculty.push(' ' + prev.fname + ' ' + prev.lname);
	
	for(var i = 1; i < d.length; i++)
	{
		var next = d[i];
		
		if (prev.app_id != next.app_id)
		{
			prev.name = presenters.toString();
			prev.fname = faculty.toString();			
			schedules.push(prev);
			presenters = [];
			faculty = [];
		}

		var pname = ' ' + next.name;
		var fac_name = ' ' + next.fname + ' ' + next.lname;
		
		if(jQuery.inArray(pname, presenters) == -1)
			presenters.push(pname);
		
		if(jQuery.inArray(fac_name, faculty) == -1)
			faculty.push(fac_name);

		prev = next;
	}
	
	if (d.length == 1)
	{
		prev.name = presenters.toString();
		prev.fname = faculty.toString();	
		schedules.push(prev);
	}
	else
	{
		next.name = presenters.toString();
		next.fname = faculty.toString();	
		schedules.push(next);
	}
	
	return schedules;
}

//Get parameters from url. If the parameter name doesn't exist, return 'undefined'
function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : sParameterName[1];
        }
    }
};

/*
The fields and values of objects returned from function combine_names()

abstract:"The library&rsquo;s grant committee received a TexTreasures grant from the Texas State Library and Archive Commission to digitize aspects of the Mason Johnson Theatre Collection in September 2016.The collection includes photographs, playbills, posters, audio, and other memorabilia relating to Mason Johnson&rsquo;s time at Texas Wesleyan College between 1956 and 1985. An emphasis is placed on the annual spring musicals, including &ldquo;Brigadoon&rdquo; (1956), &ldquo;Damn Yankees&rdquo; (1961), and &ldquo;How to Succeed in Business Without Really Trying (1968).&rdquo;Mason Johnson served in the Navy during the second world war, serving on the U.S.S. Franklin. Discharged in the spring of 1946, Mason Johnson returned to Texas, where he worked at the State Fair Musicals in Dallas. He began work with Texas Wesleyan College in 1956, when Dr. Law Sone, president of TWC, asked Johnson to direct the 1956 production of &ldquo;Brigadoon.&rdquo;As a celebration of Johnson&rsquo;s success at TWC, the performance &ldquo;Follow the Dream&rdquo; filled seats in 1985, the year of his retirement. This performance was a compilation of musical numbers from the various shows Johnson directed and even saw some Theatre alumni return to the Wesleyan stage. At his retirement, he held the title of Professor of Theatre Arts and Speech. The presentation will expand on the history of the collection, explain the process of applying for a grant and digitizing items, and will give a tour of the library&rsquo;s new digital repository.This project is made possible through a grant from the Institute of Museum and Library Services to the Texas State Library and Archives Commission under the provisions of the Library Services and technology Act. (2017)"
app_id:"4"
end:"09:20:00"
fname:" Louis Sherwood, Lizz Bridges"
format:"Oral"
lname:"Bridges"
name:" Lizz Bridges, Louis Sherwood, Alexandra Schutz"
rname:"Ella C. McFadden Science Center (MCF) 101"
start:"09:00:00"
title:"The Mason Johnson Theatre Collection...Digitized!"
*/
